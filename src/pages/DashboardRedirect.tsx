// ‚úÖ Best Practice: —Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π Dashboard Redirect –ø–æ —Ä–æ–ª–∏ —á–µ—Ä–µ–∑ /dashboard
// –≠—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥—É –∏–º–µ—Ç—å –æ–¥–∏–Ω –≤—Ö–æ–¥ ‚Äî "/dashboard" ‚Äî –¥–ª—è –≤—Å–µ—Ö —Ä–æ–ª–µ–π
// –∏ –≤ –±—É–¥—É—â–µ–º –ø–µ—Ä–µ–∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –Ω–∞ –¥—Ä—É–≥–∏—Ö —Å—Ç—Ä–∞–Ω–∏—Ü–∞—Ö (–Ω–∞–ø—Ä–∏–º–µ—Ä, –≤ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏)

// src/pages/DashboardRedirect.tsx
import React from "react";
import { Navigate } from "react-router-dom";
import { useAuth } from "@/contexts/AuthContext";

const DashboardRedirect: React.FC = () => {
  const { user } = useAuth();

  if (!user) return <Navigate to="/login" />;

  switch (user.role) {
    case "ALUMNI":
      return <Navigate to="/graduate/profile" />;
    case "EMPLOYER":
      return <Navigate to="/employer/dashboard" />;
    case "ADMIN":
      return <Navigate to="/admin/dashboard" />;
    default:
      return <Navigate to="/" />;
  }
};

export default DashboardRedirect;

// ‚ûï –î–æ–±–∞–≤—å—Ç–µ –º–∞—Ä—à—Ä—É—Ç –≤ App.tsx –∏–ª–∏ routes.tsx
// import DashboardRedirect from "@/pages/DashboardRedirect";
// <Route path="/dashboard" element={<DashboardRedirect />} />;

// üß≠ –¢–µ–ø–µ—Ä—å –≤ HomePage.tsx –∏–ª–∏ –Ω–∞–≤–±–∞—Ä–µ –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –ø—Ä–æ—Å—Ç—É—é –∫–Ω–æ–ø–∫—É:
// <Link to="/dashboard">
//   <Button>Dashboard</Button>
// </Link>
