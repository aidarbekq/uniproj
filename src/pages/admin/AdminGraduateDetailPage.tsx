import React, { useEffect, useState } from "react";
import { useParams, useNavigate } from "react-router-dom";
import api from "@/services/api";
import Button from "@/components/common/Button";
import { Input } from "@/components/common/Input";
import { Card, CardHeader, CardTitle, CardContent } from "@/components/common/Card";
import { toast } from "sonner";

const AdminGraduateDetailPage: React.FC = () => {
  const { id } = useParams();
  const navigate = useNavigate();
  const [graduate, setGraduate] = useState<any>(null);
  const [loading, setLoading] = useState(true);

  const [form, setForm] = useState({
    specialty: "",
    graduation_year: "",
    position: "",
    is_employed: false,
    employer: "",
  });

  useEffect(() => {
    api.get(`alumni/alumni-profiles/${id}/`)
      .then((res) => {
        setGraduate(res.data);
        setForm({
          specialty: res.data.specialty || "",
          graduation_year: res.data.graduation_year?.toString() || "",
          position: res.data.position || "",
          is_employed: res.data.is_employed || false,
          employer: res.data.employer?.toString() || "",
        });
      })
      .catch((err) => {
        console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è:", err);
        toast.error("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å");
      })
      .finally(() => setLoading(false));
  }, [id]);

  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    const { name, value, type, checked } = e.target;
    setForm((prev) => ({
      ...prev,
      [name]: type === "checkbox" ? checked : value,
    }));
  };

  const handleUpdate = async () => {
    try {
      const payload = {
        specialty: form.specialty,
        graduation_year: parseInt(form.graduation_year),
        position: form.position,
        is_employed: form.is_employed,
        employer: form.employer || null,
      };

      console.log("‚è´ –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö:", payload);
      await api.put(`alumni/alumni-profiles/${id}/`, payload);
      toast.success("–ü—Ä–æ—Ñ–∏–ª—å —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª—ë–Ω");
      navigate("/admin/graduates");
    } catch (error) {
      console.error(" –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è:", error);
      toast.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–∞–Ω–Ω—ã–µ.");
    }
  };

  const handleDelete = async () => {
    if (confirm("–£–¥–∞–ª–∏—Ç—å –≤—ã–ø—É—Å–∫–Ω–∏–∫–∞?")) {
      try {
        await api.delete(`alumni/alumni-profiles/${id}/`);
        toast.success("–ü—Ä–æ—Ñ–∏–ª—å —É–¥–∞–ª—ë–Ω");
        navigate("/admin/graduates");
      } catch (error) {
        console.error(" –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è:", error);
        toast.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ø—Ä–æ—Ñ–∏–ª—è");
      }
    }
  };

  if (loading || !graduate) return <p className="text-center mt-10">–ó–∞–≥—Ä—É–∑–∫–∞...</p>;

  return (
    <div className="max-w-xl mx-auto space-y-6">
      <h1 className="text-2xl font-bold text-gray-800">
        –í—ã–ø—É—Å–∫–Ω–∏–∫: {graduate.user.first_name} {graduate.user.last_name}
      </h1>

      <Card>
        <CardHeader>
          <CardTitle>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è</CardTitle>
        </CardHeader>
        <CardContent className="space-y-4">
          <Input
            name="specialty"
            label="–°–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å"
            value={form.specialty}
            onChange={handleChange}
          />
          <Input
            name="graduation_year"
            label="–ì–æ–¥ –≤—ã–ø—É—Å–∫–∞"
            value={form.graduation_year}
            onChange={handleChange}
            type="number"
          />
          <Input
            name="position"
            label="–î–æ–ª–∂–Ω–æ—Å—Ç—å"
            value={form.position}
            onChange={handleChange}
          />
          <Input
            name="employer"
            label="ID —Ä–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª—è"
            value={form.employer}
            onChange={handleChange}
          />
          <label className="flex items-center gap-2">
            <input
              type="checkbox"
              name="is_employed"
              checked={form.is_employed}
              onChange={handleChange}
              className="h-4 w-4"
            />
            <span>–¢—Ä—É–¥–æ—É—Å—Ç—Ä–æ–µ–Ω</span>
          </label>

          {graduate.resume && (
            <a
              href={graduate.resume}
              target="_blank"
              rel="noopener noreferrer"
              className="text-blue-600 hover:underline block"
            >
              üìé –°–∫–∞—á–∞—Ç—å —Ä–µ–∑—é–º–µ
            </a>
          )}

          <div className="flex justify-between mt-6">
            <Button
              variant="outline"
              className="text-red-600 border-red-500 hover:bg-red-100"
              onClick={handleDelete}
            >
              –£–¥–∞–ª–∏—Ç—å
            </Button>
            <Button onClick={handleUpdate}>–°–æ—Ö—Ä–∞–Ω–∏—Ç—å</Button>
          </div>
        </CardContent>
      </Card>
    </div>
  );
};

export default AdminGraduateDetailPage;
